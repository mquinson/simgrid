#Â NS3 is disabled because the version in ubuntu precise does not lead
# to the same timings (precision error?)
# Reenable with 
#   cmake -Denable_ns3
#   apt-get libns3-dev ns3
#
#
dist: xenial
language: cpp
compiler:
   - gcc
#  - clang 
jdk:
   - openjdk11
addons:
  apt:
    update: true
    allow_unauthenticated: yes
    packages:
    - cmake
    - valgrind
    - gfortran
    - libboost-dev
    - libboost-all-dev
    - libdw-dev
    - libevent-dev
    - libunwind8-dev
#    - pybind11-dev # Not available in Xenial
  homebrew:
    packages:
    - python
  coverity_scan:
    project:
      name: "simgrid/simgrid"
      description: "Build submitted via Travis CI"
    notification_email: martin.quinson@ens-rennes.fr
    build_command_prepend: "cmake -Denable_documentation=OFF -Denable_coverage=ON -Denable_java=OFF -Denable_model-checking=OFF -Denable_lua=OFF -Denable_compile_optimizations=ON -Denable_smpi=ON -Denable_smpi_MPICH3_testsuite=OFF -Denable_compile_warnings=OFF ."
    build_command:   "make VERBOSE=1"
    branch_pattern: coverity

# Don't install lua from Debian as we need 5.3 and don't have a backport.
#   Installing lua from the source does not make any dynamic library.
#   - curl http://www.lua.org/ftp/lua-5.3.1.tar.gz | tar xz
#   - cd lua-5.3.1 
#   -   if [ ${TRAVIS_OS_NAME} = 'linux' ] ; then make linux ; else make macosx ; fi
#   -   make INSTALL_TOP=$TRAVIS_BUILD_DIR/LuaInstall install
#   - cd ..
#   - ls -lR $TRAVIS_BUILD_DIR/LuaInstall

script:
   - if [[ "$TRAVIS_OS_NAME" == "windows"   ]]; then
       mv "C:/Program Files/Git/usr/bin/sh.exe" "sh-ignored.exe";
       choco install boost-msvc-12 python jdk8;
       export CC=gcc;
       export CXX=g++;
       export PATH='C:\Python37':'C:\local\boost_1_58_0':$PATH;
       export BOOST_LIBRARYDIR='C:/local/boost_1_58_0/lib64-msvc-12.0';
       export BOOST_INCLUDEDIR='C:/local/boost_1_58_0/include';
       export JAVA_HOME='C:/Program Files/Java/jdk1.8.0_211';
       cmake -G "MinGW Makefiles" -Denable_lua=OFF -Denable_documentation=OFF -Denable_java=ON -Denable_smpi=OFF -Denable_mallocators=OFF -Denable_lto=OFF .;
       mingw32-make.exe VERBOSE=1 java-all; 
       ctest --output-on-failure -R java;
     fi
   - if [[ "$TRAVIS_OS_NAME" == "osx"   ]]; then cmake -Denable_model-checking=OFF -Denable_documentation=OFF -Denable_coverage=ON -Denable_java=ON -Denable_lua=OFF -Denable_compile_optimizations=ON -Denable_smpi=ON -Denable_smpi_MPICH3_testsuite=OFF -Denable_compile_warnings=ON . && make -j2 VERBOSE=1 all tests && ctest -j2 --output-on-failure; fi
   - if [[ "$TRAVIS_OS_NAME" == "linux" ]]; then (cmake -Denable_model-checking=ON  -Denable_documentation=OFF -Denable_coverage=ON -Denable_java=ON -Denable_lua=OFF -Denable_compile_optimizations=ON -Denable_smpi=ON -Denable_smpi_MPICH3_testsuite=ON -Denable_compile_warnings=ON . || (echo XXX CMakeOutput.log; cat /home/travis/build/simgrid/simgrid/CMakeFiles/CMakeOutput.log; echo XXX CMakeError.log;cat /home/travis/build/simgrid/simgrid/CMakeFiles/CMakeError.log; exit 1)) && make -j2 VERBOSE=1 all tests && ctest -j2 --output-on-failure ; fi
notifications:
  recipients:
    - martin.quinson@ens-rennes.fr
  email:
    on_success: change
    on_failure: always
  irc:
    on_success: change
    on_failure: always
    channels:
      - "irc.debian.org#simgrid"
  template:
    - "%{repository}/%{branch} (%{commit} - %{author}): %{message}"
os:
  - linux
  - osx
  - windows
