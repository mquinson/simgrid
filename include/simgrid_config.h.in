/* simgrid_config.h - Results of the configure made visible to user code    */

/* Copyright (c) 2009-2014. The SimGrid Team.
 * All rights reserved.                                                     */

/* This program is free software; you can redistribute it and/or modify it
 * under the terms of the license (GNU LGPL) which comes with this package. */

#ifndef SIMGRID_PUBLIC_CONFIG_H
#define SIMGRID_PUBLIC_CONFIG_H

/* This file should only contain public declarations, mainly the definitions of SimGrid modules that were compiled in */

/** Define the version numbers of the used header files. 
    sg_version() can be used to retrieve the version of the dynamic library.
    But actually, if these numbers don't match, SimGrid refuses to start (so you shouldn't have to care about sg_version() yourself) */

#define SIMGRID_VERSION_MAJOR @SIMGRID_VERSION_MAJOR@
#define SIMGRID_VERSION_MINOR @SIMGRID_VERSION_MINOR@
#define SIMGRID_VERSION_PATCH @SIMGRID_VERSION_PATCH@

#define SIMGRID_VERSION_STRING "@SIMGRID_VERSION_STRING@"

#define SIMGRID_VERSION_BANNER "@SIMGRID_VERSION_BANNER@"

/* Version X.Y.Z will get version number XYZ: all digits concatenated without dots
 * (with Y and Z must be on two positions)*/

#define MAKE_SIMGRID_VERSION(major, minor, patch)       \
  (100UL * (100UL * (major) + (minor)) + (patch))
#define SIMGRID_VERSION MAKE_SIMGRID_VERSION(SIMGRID_VERSION_MAJOR, \
                                             SIMGRID_VERSION_MINOR, \
                                             SIMGRID_VERSION_PATCH)

#cmakedefine _XBT_WIN32 @_XBT_WIN32@	/*this variable is set if it is a windows platform*/
#cmakedefine _WIN32 @_WIN32@			/*this variable is set if it is a 32 bits windows platform*/
#cmakedefine _WIN64 @_WIN64@			/*this variable is set if it is a 64 bits  windows platform*/

/* Define to 1 if you have the <unistd.h> header file. */
#cmakedefine HAVE_UNISTD_H @HAVE_UNISTD_H@

/* Define to 1 if you have the <sys/time.h> header file. */
#cmakedefine HAVE_SYS_TIME_H @HAVE_SYS_TIME_H@

/* Whether mallocators were enabled in ccmake or not. */
#define MALLOCATOR_COMPILED_IN @MALLOCATOR_IS_WANTED@

/* Define if xbt contexts are based on our threads implementation or not */
#cmakedefine HAVE_THREAD_CONTEXTS @HAVE_THREAD_CONTEXTS@

/* Tracking of latency bound */
#cmakedefine HAVE_LATENCY_BOUND_TRACKING @HAVE_LATENCY_BOUND_TRACKING@

/* If __thread is available */
#cmakedefine HAVE_THREAD_LOCAL_STORAGE @HAVE_THREAD_LOCAL_STORAGE@

/* Define to 1 if mmalloc is compiled in. */
#cmakedefine HAVE_MMALLOC @HAVE_MMALLOC@

#cmakedefine HAVE_JEDULE @HAVE_JEDULE@ /* Was Jedule compiled in?  */
#cmakedefine HAVE_MC     @HAVE_MC@     /* Was the model-checking compiled in? */
#cmakedefine HAVE_NS3    @HAVE_NS3@    /* Was the NS3 support compiled in? */
#cmakedefine HAVE_LUA    @HAVE_LUA@    /* Was the Lua support compiled in? */

#cmakedefine SIMGRID_HAVE_LIBSIG @SIMGRID_HAVE_LIBSIG@

#endif /* SIMGRID_PUBLIC_CONFIG_H */
