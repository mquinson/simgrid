#! tesh

$ java -classpath ${classpath:=.} async/waitall/Main ${srcdir:=.}/../platforms/small_platform.xml "--log=root.fmt:[%10.6r]%e(%i:%P@%h)%e%m%n"
> [  0.000000] (0:maestro@) Using regular java threads.
> [  0.000000] (1:Sender@Jacquelin) I have 6 receivers to contact
> [  0.000000] (1:Sender@Jacquelin) Start the Sending 'Task_1' to 'Fafard'
> [  0.000000] (1:Sender@Jacquelin) Start the Sending 'Task_2' to 'Tremblay'
> [  0.000000] (2:Receiver@Fafard) I started receiving on 'Fafard. Wait 0.1 second, and block on the communication.
> [  0.000000] (3:Receiver@Tremblay) I started receiving on 'Tremblay. Wait 0.1 second, and block on the communication.
> [  0.000000] (4:Receiver@Bourassa) I started receiving on 'Bourassa. Wait 0.1 second, and block on the communication.
> [  0.000000] (5:Receiver@Jupiter) I started receiving on 'Jupiter. Wait 0.1 second, and block on the communication.
> [  0.000000] (6:Receiver@Boivin) I started receiving on 'Boivin. Wait 0.1 second, and block on the communication.
> [  0.000000] (7:Receiver@Ginette) I started receiving on 'Ginette. Wait 0.1 second, and block on the communication.
> [  0.000000] (1:Sender@Jacquelin) Start the Sending 'Task_3' to 'Bourassa'
> [  0.000000] (1:Sender@Jacquelin) Start the Sending 'Task_4' to 'Jupiter'
> [  0.000000] (1:Sender@Jacquelin) Start the Sending 'Task_5' to 'Boivin'
> [  0.000000] (1:Sender@Jacquelin) Start the Sending 'Task_6' to 'Ginette'
> [  0.000000] (1:Sender@Jacquelin) All tasks have been (asynchronously) dispatched. Let's wait for their completion.
> [  6.801793] (4:Receiver@Bourassa) I got my task, good bye.
> [  6.801793] (5:Receiver@Jupiter) I got my task, good bye.
> [  6.801793] (7:Receiver@Ginette) I got my task, good bye.
> [ 11.931226] (3:Receiver@Tremblay) I got my task, good bye.
> [ 12.364875] (2:Receiver@Fafard) I got my task, good bye.
> [ 12.575806] (6:Receiver@Boivin) I got my task, good bye.
> [ 12.575806] (1:Sender@Jacquelin) Goodbye now!
> [ 12.575806] (0:maestro@) MSG_main finished; Cleaning up the simulation...
